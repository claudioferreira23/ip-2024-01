QUESTAO 1

package main

import "fmt"

func main() {
    var matricula int
    var np1, np2, np3, np4, np5, np6, np7, np8 float64
    var nl1, nl2, nl3, nl4, nl5 float64
    var nTF float64
    var presenca float64
    var nf float64
    var mp float64
    var ml float64
    var p float64
    fmt.Print("Digite a matricula do aluno:")
    fmt.Scan(&matricula)
    fmt.Print("Digite as 8 notas de prova separadas por um espaço:")
    fmt.Scan(&np1, &np2, &np3, &np4, &np5, &np6, &np7, &np8)
    fmt.Print("Digite as 5 notas de exercicio separadas por um espaço:")
    fmt.Scan(&nl1, &nl2, &nl3, &nl4, &nl5)
    fmt.Print("Digite a nota de trabalho final:")
    fmt.Scan(&nTF)
    fmt.Print("Digite a presença do aluno:")
    fmt.Scan(&presenca)
    
    mp = (np1 + np2 + np3 + np4 + np5 + np6 + np7 + np8) / 8
    ml = (nl1 + nl2 + nl3 + nl4 + nl5) / 5
    p = presenca / 128
    
    nf = 0.7 * mp + 0.15 * ml + 0.15 * nTF
    
    switch {
        case nf >= 6 && p >= 0.75:
        fmt.Printf("Matricula: %d, Nota Final: %.2f, Situação Final: APROVADO", matricula, nf)
        case nf < 6 && p >= 0.75:
        fmt.Printf("Matricula: %d, Nota Final: %.2f, Situação Final: REPROVADO POR NOTA", matricula, nf)
        case nf >= 6 && p <= 0.75:
        fmt.Printf("Matricula: %d, Nota Final: %.2f, Situação Final: REPROVADO POR FREQUENCIA ", matricula, nf)
        case nf < 6 && p < 0.75:
        fmt.Printf("Matricula: %d, Nota Final: %.2f, Situação Final: REPROVADO POR NOTA E POR FREQUENCIA", matricula, nf)
    }
}


QUESTAO 3

package main

import "fmt"

func factorial(n int) int {
	if n <= 1 {
		return 1
	}
	return n * factorial(n-1)
}

func main() {
	var n int
	fmt.Print("Digite um número inteiro: ")
	fmt.Scan(&n)

	result := factorial(n)
	fmt.Printf("%d! = %d\n", n, result)
}


QUESTAO 4

package main

import "fmt"

func main() {
    var n, i, s float64
    
  fmt.Println("Digite um numero qualquer de 0 a 9:")
  fmt.Scanln(&n)
  fmt.Println("Digite um numero qualquer de 0 a 9:")
  fmt.Scanln(&i)
  fmt.Println("Digite um numero qualquer de 0 a 9:")
  fmt.Scanln(&s)
  
  incremento := i + (i * s)
  
  somai := n + incremento
  
  subtracaoi := n - incremento
  
  multiplicacaoi := n * incremento
  
  divisaoi := n / incremento
  
  soma := n + i
  
  subtracao := n - i
  
  multiplicacao := n * i
  
  divisao := n / i
  
  fmt.Println("Tabuada de soma:")
  fmt.Printf("%.2f + %.2f = %.2f\n", n, i, soma)
  fmt.Printf("%.2f + %.2f = %.2f\n", n, incremento, somai)
  fmt.Println("Tabuada de subtracao:")
  fmt.Printf("%.2f - %.2f = %.2f\n", n, i, subtracao)
  fmt.Printf("%.2f - %.2f = %.2f\n", n, incremento, subtracaoi)
  fmt.Println("Tabuada de multiplicacao:")
  fmt.Printf("%.2f * %.2f = %.2f\n", n, i, multiplicacao)
  fmt.Printf("%.2f * %.2f = %.2f\n", n, incremento, multiplicacaoi)
  fmt.Println("Tabuada de divisao:")
  fmt.Printf("%.2f / %.2f = %.2f\n", n, i, divisao)
  fmt.Printf("%.2f / %.2f = %.2f\n", n, incremento, divisaoi)
}


QUESTAO 7

package main

import (
    "fmt"
)

func main() {
    var n, npar, nimpar int
    var somap, somai float64

    for {
        fmt.Scan(&n)
        if n == 0 {
            break
        }
        if n%2 == 0 {
			npar++
            somap += float64(n)
        } else {
            nimpar++
            somai += float64(n)
        }
    }

    mediaPar := somap / float64(npar)
    mediaImpar := somai / float64(nimpar)

    fmt.Printf("MEDIA PAR = %.2f\n", mediaPar)
    fmt.Printf("MEDIA IMPAR = %.2f\n", mediaImpar)
}


QUESTAO 9

package main

import "fmt"

func main() {
    var n int
    
    fmt.Print("Digite um numero:")
    fmt.Scan(&n)
    
    switch {
        case n < 0:
        fmt.Print("NUMERO INVALIDO")
        case n == 2:
        fmt.Print("PRIMO")
        case n == 3:
        fmt.Print("PRIMO")
        case (n %2 == 0) || (n %3 == 0):
        fmt.Print("NAO PRIMO")
        case !(n %2 == 0) || !(n %3 == 0):
        fmt.Print("PRIMO")
    }
}  


QUESTAO 13

package main

import "fmt"

func main() {
    var n, x int
    
    fmt.Println("Digite um numero inteiro:")
    fmt.Scanln(&n)
    
    x = ((n * 2) * 32 + 32 * n) - n
    
    fmt.Print(x)
}


